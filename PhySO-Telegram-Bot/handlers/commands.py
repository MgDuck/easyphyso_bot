#!/usr/bin/env python3
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ Telegram –±–æ—Ç–∞
"""
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from services import user_service
from config.settings import ADMIN_IDS

logger = logging.getLogger(__name__)

# –°–µ—Ä–≤–∏—Å—ã –ø–æ–¥–∫–ª—é—á–∞—é—Ç—Å—è –∫–∞–∫ —Å–∏–Ω–≥–ª—Ç–æ–Ω—ã –≤ services.__init__

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    user = update.effective_user
    telegram_id = str(user.id)
    
    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = user_service.get_or_create_user(
        telegram_id=telegram_id,
        username=user.username,
        first_name=user.first_name
    )
    
    welcome_text = f"""üöÄ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PhySO Bot\\!*

–ü—Ä–∏–≤–µ—Ç, {user.first_name or user.username or '–¥—Ä—É–≥'}\\! 

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã –∏–∑ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É—è —Å–∏–º–≤–æ–ª—å–Ω—É—é —Ä–µ–≥—Ä–µ—Å—Å–∏—é PhySO\\.

üí∞ *–í–∞—à –±–∞–ª–∞–Ω—Å:* {user_data['credits']} –∫—Ä–µ–¥–∏—Ç–æ–≤

üìä *–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*
1\\. –û—Ç–ø—Ä–∞–≤—å—Ç–µ CSV —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
2\\. –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ø–æ—Ö \\(–≤–ª–∏—è–µ—Ç –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å\\)
3\\. –ü–æ–ª—É—á–∏—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—É—é —Ñ–æ—Ä–º—É–ª—É –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

üí° *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/add\\_credits \\- –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã
/help \\- —Å–ø—Ä–∞–≤–∫–∞
/sample \\- –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–º–µ—Ä CSV —Ñ–∞–π–ª–∞
/stats \\- –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

–û—Ç–ø—Ä–∞–≤—å—Ç–µ CSV —Ñ–∞–π–ª –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã\\!"""

    await update.message.reply_text(welcome_text, parse_mode='MarkdownV2')

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    help_text = """üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ PhySO Bot</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/add_credits - –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã
/stats - –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/sample - –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–º–µ—Ä CSV —Ñ–∞–π–ª–∞

<b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>

1Ô∏è‚É£ <b>–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ</b>
   ‚Ä¢ CSV —Ñ–∞–π–ª —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
   ‚Ä¢ –ú–∏–Ω–∏–º—É–º 2 —Å—Ç–æ–ª–±—Ü–∞ (x –∏ y)
   ‚Ä¢ –ú–∏–Ω–∏–º—É–º 3 —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö

2Ô∏è‚É£ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª</b>
   ‚Ä¢ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ CSV —Ñ–∞–π–ª –≤ —á–∞—Ç
   ‚Ä¢ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

3Ô∏è‚É£ <b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</b>
   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ø–æ—Ö (–±–æ–ª—å—à–µ = —Ç–æ—á–Ω–µ–µ, –Ω–æ –¥–æ—Ä–æ–∂–µ)
   ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è PhySO

4Ô∏è‚É£ <b>–ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</b>
   ‚Ä¢ –ù–∞–π–¥–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞
   ‚Ä¢ –¢–æ—á–Ω–æ—Å—Ç—å (R¬≤)
   ‚Ä¢ Pareto-–∫—Ä–∏–≤—ã–µ –æ—Ç PhySO

<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b>
‚Ä¢ config0: 1 –∫—Ä–µ–¥–∏—Ç + 0.1 –∑–∞ —ç–ø–æ—Ö—É
‚Ä¢ config1: 2 –∫—Ä–µ–¥–∏—Ç–∞ + 0.2 –∑–∞ —ç–ø–æ—Ö—É  
‚Ä¢ config2: 3 –∫—Ä–µ–¥–∏—Ç–∞ + 0.3 –∑–∞ —ç–ø–æ—Ö—É

<b>–ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:</b>
<pre>
x,y
1,2
2,4
3,6
4,8
5,10
</pre>

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /sample"""
    
    await update.message.reply_text(help_text, parse_mode='HTML')

async def add_credits_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /add_credits"""
    keyboard = [
        [InlineKeyboardButton("üéÅ +10 –∫—Ä–µ–¥–∏—Ç–æ–≤", callback_data="add_10"),
         InlineKeyboardButton("üíé +50 –∫—Ä–µ–¥–∏—Ç–æ–≤", callback_data="add_50")],
        [InlineKeyboardButton("üöÄ +100 –∫—Ä–µ–¥–∏—Ç–æ–≤", callback_data="add_100"),
         InlineKeyboardButton("üí∞ +500 –∫—Ä–µ–¥–∏—Ç–æ–≤", callback_data="add_500")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    text = """üí≥ *–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–æ–≤*

–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:

üéÅ *10 –∫—Ä–µ–¥–∏—Ç–æ–≤* \\- –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
üíé *50 –∫—Ä–µ–¥–∏—Ç–æ–≤* \\- –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤  
üöÄ *100 –∫—Ä–µ–¥–∏—Ç–æ–≤* \\- –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
üí∞ *500 –∫—Ä–µ–¥–∏—Ç–æ–≤* \\- –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã

_–í –¥–µ–º–æ\\-–≤–µ—Ä—Å–∏–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ\\!_"""
    
    await update.message.reply_text(text, reply_markup=reply_markup, parse_mode='MarkdownV2')

async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /stats"""
    telegram_id = str(update.effective_user.id)
    user_data = user_service.get_user(telegram_id)
    
    if user_data:
        stats_text = f"""üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å:</b>
‚Ä¢ –ò–º—è: {user_data['name']}
‚Ä¢ Telegram ID: {telegram_id}
‚Ä¢ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user_data['created_at'][:10]}

üí∞ <b>–ö—Ä–µ–¥–∏—Ç—ã:</b>
‚Ä¢ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_data['credits']}
‚Ä¢ –í—Å–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: {user_data['total_predictions']}

üîß <b>PhySO API:</b>
‚Ä¢ User ID: {user_data['physo_user_id']}
‚Ä¢ API Key: {user_data['physo_api_key'][:20]}...

üìà <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_service.get_all_users_count()}
‚Ä¢ –û–±—â–∏–π –ø—É–ª –∫—Ä–µ–¥–∏—Ç–æ–≤: {user_service.get_total_credits()}"""
        
        await update.message.reply_text(stats_text, parse_mode='HTML')
    else:
        await update.message.reply_text("‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")

async def sample_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /sample - –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–º–µ—Ä–∞ CSV —Ñ–∞–π–ª–∞"""
    from utils.file_utils import generate_sample_csv
    import tempfile
    import os
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –ø—Ä–∏–º–µ—Ä–æ–º
    with tempfile.NamedTemporaryFile(mode='w', suffix='.csv', delete=False) as tmp_file:
        tmp_path = tmp_file.name
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
    if generate_sample_csv(tmp_path, "linear"):
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
            with open(tmp_path, 'rb') as f:
                await update.message.reply_document(
                    document=f,
                    filename="sample_linear_data.csv",
                    caption="""üìã <b>–ü—Ä–∏–º–µ—Ä CSV —Ñ–∞–π–ª–∞</b>

–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –ª–∏–Ω–µ–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (y = 2x + 1).

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç:
‚Ä¢ –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
‚Ä¢ –ß–∏—Å–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ
‚Ä¢ –ú–∏–Ω–∏–º—É–º 2 —Å—Ç–æ–ª–±—Ü–∞ –∏ 3 —Å—Ç—Ä–æ–∫–∏

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!""",
                    parse_mode='HTML'
                )
        finally:
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            os.unlink(tmp_path)
    else:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞ —Ñ–∞–π–ª–∞")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ inline –∫–Ω–æ–ø–æ–∫
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    await query.answer()
    
    telegram_id = str(update.effective_user.id)
    
    if query.data == "add_credits":
        await add_credits_command(update, context)
    
    elif query.data == "stats":
        await stats_command(update, context)
    
    elif query.data == "sample":
        await sample_command(update, context)
    
    elif query.data.startswith("add_"):
        # –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–æ–≤
        amount = int(query.data.split("_")[1])

        updated_user = user_service.add_credits(telegram_id, amount)
        if updated_user:
            await query.edit_message_text(
                f"‚úÖ *–ö—Ä–µ–¥–∏—Ç—ã –ø–æ–ø–æ–ª–Ω–µ–Ω—ã\\!*\n\n"
                f"–î–æ–±–∞–≤–ª–µ–Ω–æ: \\+{amount} –∫—Ä–µ–¥–∏—Ç–æ–≤\n"
                f"–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {updated_user['credits']} –∫—Ä–µ–¥–∏—Ç–æ–≤",
                parse_mode='MarkdownV2'
            )
        else:
            await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤")

# –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
async def admin_stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ê–¥–º–∏–Ω—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"""
    user_id = update.effective_user.id
    
    if user_id not in ADMIN_IDS:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        return
    
    total_users = user_service.get_all_users_count()
    total_credits = user_service.get_total_credits()
    
    admin_text = f"""üîß *–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å*

üë• *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:* {total_users}
üí∞ *–û–±—â–∏–π –ø—É–ª –∫—Ä–µ–¥–∏—Ç–æ–≤:* {total_credits}

*–ö–æ–º–∞–Ω–¥—ã:*
/admin\\_add\\_credits @username amount \\- –¥–æ–±–∞–≤–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã
/admin\\_user\\_info @username \\- –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    
    await update.message.reply_text(admin_text, parse_mode='MarkdownV2')
